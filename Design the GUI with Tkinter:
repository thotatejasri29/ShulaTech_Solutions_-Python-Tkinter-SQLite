import tkinter as tk
from tkinter import messagebox
import sqlite3

# Function to add a task to the database
def add_task():
    task = task_entry.get()
    due_date = due_date_entry.get()

    if task == "":
        messagebox.showwarning("Input Error", "Please enter a task description.")
        return

    conn = sqlite3.connect('todo_list.db')
    c = conn.cursor()
    c.execute("INSERT INTO tasks (task, due_date, status) VALUES (?, ?, ?)", (task, due_date, 0))
    conn.commit()
    conn.close()
    display_tasks()
    task_entry.delete(0, tk.END)
    due_date_entry.delete(0, tk.END)

# Function to delete a task from the database
def delete_task():
    selected_task = task_listbox.curselection()
    if not selected_task:
        messagebox.showwarning("Selection Error", "Please select a task to delete.")
        return

    task_id = task_listbox.get(selected_task[0]).split(" ")[0]
    conn = sqlite3.connect('todo_list.db')
    c = conn.cursor()
    c.execute("DELETE FROM tasks WHERE id=?", (task_id,))
    conn.commit()
    conn.close()
    display_tasks()

# Function to mark a task as completed
def mark_completed():
    selected_task = task_listbox.curselection()
    if not selected_task:
        messagebox.showwarning("Selection Error", "Please select a task to mark as completed.")
        return

    task_id = task_listbox.get(selected_task[0]).split(" ")[0]
    conn = sqlite3.connect('todo_list.db')
    c = conn.cursor()
    c.execute("UPDATE tasks SET status=1 WHERE id=?", (task_id,))
    conn.commit()
    conn.close()
    display_tasks()

# Function to display tasks in the listbox
def display_tasks():
    task_listbox.delete(0, tk.END)

    conn = sqlite3.connect('todo_list.db')
    c = conn.cursor()
    c.execute("SELECT * FROM tasks")
    tasks = c.fetchall()
    conn.close()

    for task in tasks:
        task_str = f"{task[0]} {task[1]} - Due: {task[2]} - {'Completed' if task[3] else 'Pending'}"
        task_listbox.insert(tk.END, task_str)

# Setting up the Tkinter window
root = tk.Tk()
root.title("To-Do List")

# Task input
task_label = tk.Label(root, text="Task Description:")
task_label.pack()
task_entry = tk.Entry(root, width=50)
task_entry.pack()

# Due date input
due_date_label = tk.Label(root, text="Due Date (YYYY-MM-DD):")
due_date_label.pack()
due_date_entry = tk.Entry(root, width=50)
due_date_entry.pack()

# Buttons
add_button = tk.Button(root, text="Add Task", command=add_task)
add_button.pack()

delete_button = tk.Button(root, text="Delete Task", command=delete_task)
delete_button.pack()

mark_button = tk.Button(root, text="Mark as Completed", command=mark_completed)
mark_button.pack()

# Task listbox
task_listbox = tk.Listbox(root, width=75, height=15)
task_listbox.pack()

# Display the tasks initially
display_tasks()

# Start the Tkinter event loop
root.mainloop()
